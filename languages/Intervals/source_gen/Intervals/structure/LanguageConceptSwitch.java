package Intervals.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BoundedInterval = 0;
  public static final int ClosedInterval = 1;
  public static final int Factorization = 2;
  public static final int Interval = 3;
  public static final int IntervalClass = 4;
  public static final int LeftOpenInterval = 5;
  public static final int OpenInterval = 6;
  public static final int RightOpenInterval = 7;
  public static final int UnboundedInterval = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xa53c4e1e842a41bfL, 0x8061e6593f83a038L);
    builder.put(0x1c9f87d6ea52918fL, BoundedInterval);
    builder.put(0x4027a593fa60e8e9L, ClosedInterval);
    builder.put(0x4027a593fa5b6202L, Factorization);
    builder.put(0x1c9f87d6ea52916cL, Interval);
    builder.put(0x4027a593fa5b5529L, IntervalClass);
    builder.put(0x4027a593fa614a07L, LeftOpenInterval);
    builder.put(0x4027a593fa6077b4L, OpenInterval);
    builder.put(0x4027a593fa61534aL, RightOpenInterval);
    builder.put(0x1c9f87d6ea52919bL, UnboundedInterval);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
